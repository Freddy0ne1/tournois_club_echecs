"""
Module tournament_utils
Fonctions utilitaires pour recharger les tournois et mettre √† jour les r√©f√©rences des joueurs.
"""

from .tournament_controller_base import TournamentController as BaseTournamentController


class TournamentController(BaseTournamentController):
    """
    Sous-contr√¥leur pour les fonctions utilitaires des tournois :
    - Recharger les tournois depuis le disque
    - Mettre √† jour les r√©f√©rences des joueurs
    """

    # -----------------------
    #   RECHARGER TOURNOIS DISQUE
    # -----------------------

    # ------- Recharge en m√©moire tous les tournois depuis les fichiers JSON -------
    def reload_tournaments(self):
        """
        Recharge la liste des tournois √† partir des fichiers JSON pr√©sents dans DATA_DIR.
        √âtapes :
        1. Appelle la m√©thode interne _load()
            - Vide d'abord la liste interne (_tournaments)
            - Parcourt tous les fichiers JSON dans DATA_DIR
            - Recharge chaque tournoi valide en m√©moire
        """
        # 1Ô∏è‚É£ Appelle la m√©thode _load() pour rafra√Æchir la liste des tournois
        self._load()

    # ------- Met √† jour les r√©f√©rences d'un joueur dans tous les tournois -------
    def update_player_references(self, updated_player):
        """
        Met √† jour les r√©f√©rences d'un joueur dans tous les tournois charg√©s.
        Pour chaque tournoi :
        - Recherche un joueur ayant le m√™me identifiant national
        - Remplace l'ancienne instance Player par updated_player
        - Sauvegarde le tournoi si une modification a √©t√© effectu√©e
        """
        # 1Ô∏è‚É£ Parcourt tous les tournois actuellement en m√©moire
        for tournament in self._tournaments:
            changed = False  # Drapeau indiquant si une mise √† jour a √©t√© faite

            # 2Ô∏è‚É£ Parcourt tous les joueurs inscrits dans le tournoi
            for idx, p in enumerate(tournament.players):
                # üÖ∞ V√©rifie si l'ID national correspond
                if p.national_id == updated_player.national_id:
                    # üÖ± Remplace l'ancienne instance Player par la nouvelle
                    tournament.players[idx] = updated_player
                    changed = True

            # 3Ô∏è‚É£ Si une ou plusieurs r√©f√©rences ont √©t√© mises √† jour, on sauvegarde
            if changed:
                self._save(tournament)
